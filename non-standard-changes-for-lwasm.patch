From 933a737398338c72bfefc9768b26e463a0a9338f Mon Sep 17 00:00:00 2001
From: Tim Stahlhut <stahta01@gmail.com>
Date: Fri, 28 Apr 2023 09:44:34 -0400
Subject: code: Re-write conditional logic for lwasm

---
 bas.asm    | 144 ++++++++++++++++++++++++++---------------------------
 disk.asm   |   6 +--
 extbas.asm |  72 +++++++++++++--------------
 supbas.asm |  78 ++++++++++++++---------------
 4 files changed, 150 insertions(+), 150 deletions(-)

diff --git a/bas.asm b/bas.asm
index 4be64d8..d5eaf6f 100644
--- a/bas.asm
+++ b/bas.asm
@@ -41,7 +41,7 @@ LA00E           LDS         #LINBUF+LBUFMX+1 ; SET STACK TO TOP OF LINE INPUT BU
                 BNE         BACDST          ; NO - DO A COLD START
                 JMP         ,X              ; YES, G0 THERE
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                IFLT        VERBAS-11
 ; -----------------------------------------------------------------------------
 RESVEC          LDU         #LA00E          ; BASIC WARM START ENTRY (RESET)
 LA02A           CLRB                        ;
@@ -118,10 +118,10 @@ LA0BA           STX         TOPRAM          ; SET TOP OF RAM POINTER
                 STX         FRETOP          ; SAVE NEW TOP OF FREE RAM
                 TFR         X,S             ; PUT STACK THERE (AT MEMEND-200)
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                IFLT        VERBAS-20
 ; -----------------------------------------------------------------------------
 RESVEC          LEAY        <LA00E,PCR      ; POINT Y TO WARM START CHECK CODE
 LA02A           LDX         #PIA1           ; POINT X TO PIA1
@@ -158,7 +158,7 @@ LA056           STA         ,U++            ; ZERO OUT SAM CONTROL REGISTER BIT
 LA05E           TFR         B,DP            ; SET DIRECT PAGE TO ZERO
                 LDB         #$04            ; USE AS A MASK TO CHECK RAMSZ INPUT
 ; -----------------------------------------------------------------------------
-                if          VERBAS<13
+                IFLT        VERBAS-13
 ; -----------------------------------------------------------------------------
                 STA         -2,X            ; SET RAMSZ STROBE HIGH
                 BITB        2,X             ; CHECK RAMSZ INPUT
@@ -168,7 +168,7 @@ LA05E           TFR         B,DP            ; SET DIRECT PAGE TO ZERO
                 BEQ         LA070           ; BRANCH IF JUMPER SET FOR 64K RAMS
                 LEAU        -2,U            ; ADJUST POINTER TO SET SAM FOR 16K RAMS
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 CLR         -2,X
                 BITB        2,X
@@ -179,7 +179,7 @@ LA05E           TFR         B,DP            ; SET DIRECT PAGE TO ZERO
 LA06E           NOP                         ;
                 NOP                         ;
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 LA070           STA         -3,U            ; PROGRAM SAM FOR 16K OR 64K RAMS
 LA072           JMP         ,Y              ; GO DO A WARM OR COLD START
@@ -201,7 +201,7 @@ LA084           LDA         2,X             ; LOOK FOR END OF MEMORY
                 BRA         LA084           ; KEEP LOOKING FOR END OF RAM
 
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 RESVEC          LEAY        <LA00E,PCR      ; POINT Y TO WARM START CHECK CODE
 LA02A           LDA         #$3A
@@ -259,7 +259,7 @@ LA077           CLR         ,--X            ; MOVE POINTER DOWN TWO-CLEAR BYTE
                 NOP                         ;
                 NOP                         ;
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 LA093           STX         TOPRAM          ; SAVE ABSOLUTE TOP OF RAM
@@ -285,14 +285,14 @@ LA0C0           STA         ,X+             ; FILL THE RAM VECTORS WITH RTS
                 BNE         LA0C0           ; BRANCH IF NOT DONE
                 STA         LINHDR-1        ; PUT RTS IN LINHDR-1
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
                 JSR         >LAD19          ; G0 DO A NEW
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                IFLT        VERBAS-20
 ; -----------------------------------------------------------------------------
                 LDX         #$4558          ; ASCII EX (FIRST TWO LETTERS OF EXTENDED)
 LA0CE           CMPX        EXBAS           ; SEE IF EXTENDED ROM IS THERE
@@ -303,7 +303,7 @@ LA0CE           CMPX        EXBAS           ; SEE IF EXTENDED ROM IS THERE
                 LDX         #BAWMST         ; WARM START ADDRESS
                 STX         RSTVEC          ; SAVE IT
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 JMP         >$8002          ; CPYROM copy rom to ram (coco3)
                 PSHS        X,B
@@ -315,7 +315,7 @@ LA0D6           JSR         >LA199
                 JMP         >LA1B9
                 FCB         $72
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -330,15 +330,15 @@ BAWMST          NOP                         ;  NOP REQD FOR WARM START
 
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                IFLT        VERBAS-20
 ; -----------------------------------------------------------------------------
                 JSR         >CLRSCRN        ; CLEAR SCREEN
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 JSR         >CLS            ; CLEAR SCREEN
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -352,15 +352,15 @@ BFRQSV          TST         PIA1+3          ; CARTRIDGE INTERRUPT?
 
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                IFLT        VERBAS-20
 ; -----------------------------------------------------------------------------
 LA0FC           JSR         >LA7D1          ; KEEP DELAYING
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 LA0FC           JSR         >$8C28          ; ?
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -370,15 +370,15 @@ LA0FC           JSR         >$8C28          ; ?
 
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                IFLT        VERBAS-11
 ; -----------------------------------------------------------------------------
 LA102           LDU         #LA108
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 LA102           LEAY        <LA108,PCR      ; Y = ROM-PAK START UP VECTOR
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
                 JMP         >LA02A          ; GO DO INITIALIZATION
 LA108           CLR         RSTFLG          ; CLEAR WARM START FLAG
@@ -391,15 +391,15 @@ LA10D           FCB         18              ; MID BAND PARTITION OF 1200/2400 HE
                 FDB         128             ; NUMBER OF 55S TO CASSETTE LEADER
                 FCB         11              ; CURSOR BLINK DELAY
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                IFLT        VERBAS-12
 ; -----------------------------------------------------------------------------
                 FDB         $57             ; LINE PRINTER BAUD RATE
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FDB         $58             ; CONSTANT FOR 600 BAUD VER 1.2 & UP
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
                 FDB         1               ; PRINTER CARRIAGE RETURN DELAY
                 FCB         16              ; TAB FIELD WIDTH
@@ -434,47 +434,47 @@ LA145           FDB         LAA29           ; POINTS TO SECONDARY FUNCTION JUMP
 ; COPYRIGHT MESSAGES
 LA147           FCC         "COLOR BASIC "
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                IFLT        VERBAS-11
 ; -----------------------------------------------------------------------------
                 FCC         "1.0"
 ; -----------------------------------------------------------------------------
-                else
-                if          VERBAS<12
+                ELSE
+                IFLT        VERBAS-12
 ; -----------------------------------------------------------------------------
                 FCC         "1.1"
 ; -----------------------------------------------------------------------------
-                else
-                if          VERBAS<13
+                ELSE
+                IFLT        VERBAS-13
 ; -----------------------------------------------------------------------------
                 FCC         "1.2"
 ; -----------------------------------------------------------------------------
-                else
-                if          VERBAS<20
+                ELSE
+                IFLT        VERBAS-20
 ; -----------------------------------------------------------------------------
                 FCC         "1.3"
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FCC         "1.2"           ; for some reason, coco3 has "1.2" in there ;
 ; but we are still calling it VERBAS=20 for our conditional assemble
 ; -----------------------------------------------------------------------------
-                endif
-                endif
-                endif
-                endif
+                ENDC
+                ENDC
+                ENDC
+                ENDC
 ; -----------------------------------------------------------------------------
 LA156           FCB         CR
 LA157           FCC         "(C) 198"
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                IFLT        VERBAS-12
 ; -----------------------------------------------------------------------------
                 FCC         "0"
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FCC         "2"
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
                 FCC         " TANDY"
 LA165           FCB         $00
@@ -526,7 +526,7 @@ LA1BF           PULS        B,X,PC
 ; THIS ROUTINE GETS A KEYSTROKE FROM THE KEYBOARD IF A KEY
 ; IS DOWN. IT RETURNS ZERO TRUE IF THERE WAS NO KEY DOWN.
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                IFLT        VERBAS-11
 ; -----------------------------------------------------------------------------
 KEYIN1          EQU         *               ; needed symbol
 KEYIN           PSHS        B,X             ; SAVE REGISTERS
@@ -629,10 +629,10 @@ LA264           ASLB                        ;  MULT ACCB BY 2 - THERE ARE 2 ENTR
 LA26A           LDB         B,X             ; GET ASCII CODE FROM CONTROL TABLE
                 BRA         LA20E           ; GO CHECK DEBOUNCE
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                IFLT        VERBAS-12
 ; -----------------------------------------------------------------------------
 KEYIN1          EQU         *               ; needed symbol
 KEYIN           PSHS        B,X,U           ; SAVE REGISTERS
@@ -736,14 +736,14 @@ LA269           LDB         B,X             ; GET ASCII CODE FROM CONTROL TABLE
                 BRA         LA20B           ; GO CHECK DEBOUNCE
                 FCB         0               ; WASTED SPACE IN VERSION 1.1
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 
 
 
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                IFLT        VERBAS-20
 ; -----------------------------------------------------------------------------
 KEYIN1          CLR         PIA0+2          ; CLEAR COLUMN STROBE
                 LDA         PIA0            ; READ KEY ROWS
@@ -751,7 +751,7 @@ KEYIN1          CLR         PIA0+2          ; CLEAR COLUMN STROBE
                 ASLA                        ;  SHIFT OFF JOYSTICK DATA
                 BEQ         LA244           ; RETURN IF NO KEYS OR FIRE BUTTONS DOWN
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; THIS ROUTINE GETS A KEYSTROKE FROM THE KEYBOARD IF A KEY
 ; IS DOWN. IT RETURNS ZERO TRUE IF THERE WAS NO KEY DOWN.
@@ -765,7 +765,7 @@ KEYIN1          JMP         >KEYIN
                 RTS
                 RTS
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -865,10 +865,10 @@ LA264           ASLB                        ;  MULT ACCB BY 2 - THERE ARE 2 ENTR
 LA26A           LDB         B,X             ; GET ASCII CODE FROM CONTROL TABLE
                 BRA         LA20C           ; GO CHECK DEBOUNCE
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 ; CONTROL TABLE UNSHIFTED, SHIFTED VALUES
@@ -919,7 +919,7 @@ LA2AA           STB         BLKTYP          ; BLOCK NUMBER
 LA2BF           PSHS        X,B,A,CC        ; SAVE REGISTERS AND INTERRUPT STATUS
                 ORCC        #$50            ; DISABLE IRQ,FIRQ
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                IFLT        VERBAS-11
 ; -----------------------------------------------------------------------------
                 BSR         LA2FB           ; SET OUTPUT TO MARKING
                 ASLA                        ;  SEND 7 BITS AND ONE STOP BIT (BIT 7=0)
@@ -954,10 +954,10 @@ LA2F3           LDB         PIA1+2          ; WAIT FOR HANDSHAKE
                 BCS         LA2F3           ; NOT YET READY
                 PULS        B,X,PC          ; RESTORE REGISTERS
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                IFLT        VERBAS-12
 ; -----------------------------------------------------------------------------
                 BSR         LA2FB           ; SET OUTPUT TO MARKING
                 CLRB                        ;
@@ -989,7 +989,7 @@ LA2ED           LDB         PIA1+2          ; WAIT FOR HANDSHAKE
 LA2F3           PULS        B,X,PC          ; RESTORE REGISTERS
                 FDB         0,0,0           ; WASTED SPACE IN VERSION 1.1
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 LA2C3           LDB         PIA1+2          ; GET RS 232 STATUS
                 LSRB                        ;  SHIFT RS 232 STATUS BIT INTO CARRY
@@ -1023,10 +1023,10 @@ LA2F3           LDB         PIA1+2          ; WAIT FOR HANDSHAKE
                 BCS         LA2F3           ; NOT YET READY
                 PULS        B,X,PC          ; RESTORE REGISTERS
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 LA2FB           LDB         #2              ; SET RS232 OUTPUT HIGH (MARKING)
@@ -1203,15 +1203,15 @@ LA42D           JSR         >RVEC8          ; HOOK INTO RAM
                 BNE         LA449           ; NO
                 LDA         CINCTR          ; GET CHARACTER BUFFER CTR
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                IFLT        VERBAS-11
 ; -----------------------------------------------------------------------------
                 BEQ         LA449
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 BEQ         LA444           ; WRITE END OF PROG BLOCK IF BUFFER EMPTY
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
                 JSR         >LA2A8          ; WRITE A BLOCK TO TAPE
 LA444           LDB         #$FF            ; END OF FILE TYPE BLOCK NUMBER
@@ -1567,16 +1567,16 @@ LA6E5           BNE         LA6ED           ; GOT AN ERROR ON READING IN BLOCK
                 LDA         BLKTYP          ; GET BLOCK NUMBER
                 NEGA                        ;  CHECK FOR LAST BLOCK
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                IFLT        VERBAS-11
 ; -----------------------------------------------------------------------------
                 BMI         LA6F3           ; RETURN IF NOT AN END OF PROGRAM BLOCK
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; make cursor in upper left blink
                 BMI         LA700           ; RETURN IF NOT AN END OF PROGRAM BLOCK
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
                 DECA                        ;  IF BLOCK NUMBER WAS $FF, ACCA IS NOW ZERO - THIS WILL
 ; CAUSE CLOAD TO IGNORE ERRORS IN THE
@@ -3155,15 +3155,15 @@ LB22F           JSR         >LB3A2          ; SET CARRY IF NOT ALPHA
                 BEQ         LB27C           ; YES - GO PROCESS THE MINUS OPERATOR
                 CMPA        #$AB            ; PLUS TOKEN
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                IFLT        VERBAS-12
 ; -----------------------------------------------------------------------------
                 BEQ         LB228           ; YES - GET ANOTHER CHARACTER
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 BEQ         LB223           ; YES - GET ANOTHER CHARACTER
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
                 CMPA        #'"             ; STRING DELIMITER?
                 BNE         LB24E           ; NO
@@ -3412,7 +3412,7 @@ LB3E6           JSR         >LB141          ; GO EVALUATE NUMERIC EXPRESSION
 LB3E9           LDA         FP0SGN          ; GET FPA0 MANTISSA SIGN
                 BMI         LB44A           ; FC ERROR IF NEGATIVE NUMBER
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                IFLT        VERBAS-12
 ; -----------------------------------------------------------------------------
 INTCNV          LDA         FP0EXP          ; GET FPA0 EXPONENT
                 CMPA        #$90            ; COMPARE TO 32768 - LARGEST INTEGER
@@ -3447,7 +3447,7 @@ LB408           LDX         VARNAM          ; GET VARIABLE NAME
                 STA         VALTYP          ; FLAG - LEAVE DIMENSION LENGTH ON STACK
                 STB         DIMFLG
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; CONVERT FPA0 TO A SIGNED TWO BYTE INTEGER; RETURN VALUE IN ACCD
 INTCNV          JSR         >LB143          ; TM ERROR IF STRING VARIABLE
@@ -3482,7 +3482,7 @@ LB40A           LDX         VARNAM          ; GET VARIABLE NAME
                 PULS        A,B             ; RESTORE VARIABLE TYPE AND ARRAY
                 STD         DIMFLG          ; FLAG - LEAVE DIMENSION LENGTH ON STACK
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
                 LDX         ARYTAB          ; GET START OF ARRAYS
 LB42A           CMPX        ARYEND          ; COMPARE TO END OF ARRAYS
@@ -4313,15 +4313,15 @@ LB9CD           TFR         A,B             ; PUT EXPONENT OF FPA1 INTO ACCB
                 SUBB        FP0EXP          ; SUBTRACT EXPONENT OF FPA0 FROM EXPONENT OF FPA1
                 BEQ         LBA3F           ; BRANCH IF EXPONENTS ARE EQUAL
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                IFLT        VERBAS-12
 ; -----------------------------------------------------------------------------
                 BMI         LB9E2           ; BRANCH IF EXPONENT FPA0 > FPA1
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 BCS         LB9E2           ; BRANCH IF EXPONENT FPA0 > FPA1
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
                 STA         FP0EXP          ; REPLACE FPA0 EXPONENT WITH FPA1 EXPONENT
                 LDA         FP1SGN          ; REPLACE FPA0 MANTISSA SIGN
@@ -5235,7 +5235,7 @@ LBFE6           FCB         $a1             ; '! ^ $80
 LBFF0           FDB         LA681           ; RESERVED
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                IFLT        VERBAS-20
 ; -----------------------------------------------------------------------------
 LBFF2           FDB         SW3VEC          ; SWI3
 LBFF4           FDB         SW2VEC          ; SWI2
@@ -5245,7 +5245,7 @@ LBFFA           FDB         SWIVEC          ; SWI
 LBFFC           FDB         NMIVEC          ; NMI
 LBFFE           FDB         RESVEC          ; RESET
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FDB         $FEEE           ; INT.SWI3
                 FDB         $FEF1           ; INT.SWI2
@@ -5255,7 +5255,7 @@ LBFFE           FDB         RESVEC          ; RESET
                 FDB         $FEFD           ; INT.NMI
                 FDB         $8C1B           ; DLDBUG
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 END
diff --git a/disk.asm b/disk.asm
index 7a613fc..9c78b25 100644
--- a/disk.asm
+++ b/disk.asm
@@ -3,7 +3,7 @@
 ; TODO (they are just here back to back in a big if.. else..)
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                IFGT        VERDISK-10
 ; -----------------------------------------------------------------------------
 
 ; Disk Color BASIC 1.1
@@ -3350,7 +3350,7 @@ END             RTS
                 FCB         $98,$C4,$07,$44,$44,$44,$39
 
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 
 ; Disk Color BASIC 1.0
@@ -6731,5 +6731,5 @@ LD7DA           JMP         L8955           ; JUMP TO EXTENDED BASIC'S IRQ HANDL
 
 
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
diff --git a/extbas.asm b/extbas.asm
index 9804ab0..b6248ba 100644
--- a/extbas.asm
+++ b/extbas.asm
@@ -88,15 +88,15 @@ L80B8           LDX         #XBWMST         ; GET EXBAS WARM START (RESET) VECTO
                 JMP         >LA0E2          ; SET WARM START FLAG, ENTER BASIC
 ; EXBAS WARM START ENTRY POINT
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<20
+                IFLT        VEREXTBAS-20
 ; -----------------------------------------------------------------------------
 XBWMST          NOP                         ;  WARM START ENABLE
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 XBWMST          FCB         $ff
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 CLR         PLYTMR
@@ -109,7 +109,7 @@ XBWMST          FCB         $ff
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                IFLT        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 ; THIS CODE IS NOT USED BY ANY OF THE BASICS
 L80D0           LDA         PIA1+2          ; READ PIA PORT B
@@ -119,7 +119,7 @@ L80D0           LDA         PIA1+2          ; READ PIA PORT B
 L80DA           JMP         ,X              ; JUMP TO ADDRESS IN X REG
                 FCB         $00,$00         ; DEAD SPACE
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; THIS CODE IS A PATCH TO FIX THE PCLEAR BUG
 L80D0           LDA         CURLIN          ; GET THE CURRENT LINE NUMBER
@@ -131,7 +131,7 @@ L80D0           LDA         CURLIN          ; GET THE CURRENT LINE NUMBER
                 STD         CHARAD          ; SAVE NEW BASIC INPUT POINTER
 L80DD           RTS
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -147,21 +147,21 @@ L80E8           FCC         "EXTENDED COLOR BASIC "
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                IFLT        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
                 FCC         "1.0"           ; MINOR VERSION NUMBER
 ; -----------------------------------------------------------------------------
-                else
-                if          VEREXTBAS<20
+                ELSE
+                IFLT        VEREXTBAS-20
 ; -----------------------------------------------------------------------------
                 FCC         "1.1"           ; MINOR VERSION NUMBER
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FCC         "2.0"           ; MINOR VERSION NUMBER
 ; -----------------------------------------------------------------------------
-                endif
-                endif
+                ENDC
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -169,21 +169,21 @@ L80E8           FCC         "EXTENDED COLOR BASIC "
 L8100           FCB         CR
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                IFLT        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 L8101           FCC         "COPYRIGHT (C) 1981 BY TANDY" ; COPYRIGHT YEAR
 ; -----------------------------------------------------------------------------
-                else
-                if          VEREXTBAS<20
+                ELSE
+                IFLT        VEREXTBAS-20
 ; -----------------------------------------------------------------------------
 L8101           FCC         "COPYRIGHT (C) 1982 BY TANDY" ; COPYRIGHT YEAR
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 L8101           FCC         "COPR. 1982, 1986 BY TANDY  " ; COPYRIGHT YEAR
 ; -----------------------------------------------------------------------------
-                endif
-                endif
+                ENDC
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -1509,13 +1509,13 @@ DLOAD           JSR         >LA429          ; CLOSE FILES
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<20
+                IFLT        VEREXTBAS-20
 ; -----------------------------------------------------------------------------
 
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                IFLT        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 ; the DLOAD bug. the code in version 1.0 did not allow for the fact
 ; that the current basic input character was not in ACCA following the
@@ -1526,7 +1526,7 @@ DLDBUG          CLR         ,-S             ; SAVE DEFAULT TOKEN (NON DLOADM) ON
                 BNE         L8C25           ; NO
                 STA         ,S              ; SAVE THE M ON THE STACK
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; patch to fix the DLOAD bug.
 
@@ -1535,7 +1535,7 @@ DLDBUG          JSR         GETCCH          ; GET THE CURRENT INPUT CHARACTER
                 PSHS        A               ; SAVE DLOADM (=0), OLOAD (<>0) FLAG
                 BNE         L8C25           ; BRANCH IF OLOAD
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 JSR         GETNCH          ; GET AN INPUT CHAR FROM BASIC
@@ -1563,23 +1563,23 @@ L8C44           JSR         >L8CD0          ; TRANSMIT FILE NAME AND READ IN FIL
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                IFLT        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
                 BNE         L8C85           ; DLOADM
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; BNE became BEQ as necessitated by the previous fix to DLOAD
                 BEQ         L8C85           ; DLOADM
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 ; READ IN A DLOAD FILE
                 JSR         >LA5C7          ; CHECK FOR END OF LINE - SYNTAX ERROR IF NOT
 
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; Version 2.0 (see coco3.asm)
 DLDBUG          ORCC        #$50            ; DISABLE INTERRUPTS
@@ -1608,7 +1608,7 @@ L8C4F           PULS        CC
                 NOP                         ;
                 FCB         $C7
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -2324,13 +2324,13 @@ L9177           INCA                        ;  ADD ONE TO TENS DIGIT COUNTER
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                IFLT        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
                 SUBB        #12             ; SUBTRACT 12 FROM EXPONENT AND ADD ONE TO TENS
                 BCC         L9177           ; DIGIT IF NO CARRY. TENS DIGIT DONE IF THERE IS A CARRY
                 ADDB        #'9+3           ; ADD ASCII BIAS TO UNITS DIGIT
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; fix minor bug in the ascii to floating point conversion in PRINT USING
 
@@ -2338,7 +2338,7 @@ L9177           INCA                        ;  ADD ONE TO TENS DIGIT COUNTER
                 BCC         L9177           ; DIGIT IF NO CARRY. TENS DIGIT DONE IF THERE IS A CARRY
                 ADDB        #'9+1           ; ADD ASCII BIAS TO UNITS DIGIT
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -3050,7 +3050,7 @@ PMODETOK        CMPA        #',             ; CHECK FOR COMMA - FIRST ARGUMENT M
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                IFLT        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 ; supposed to be start of graphic ram. patched later to not be hardcoded value
 ;
@@ -3060,11 +3060,11 @@ PMODETOK        CMPA        #',             ; CHECK FOR COMMA - FIRST ARGUMENT M
 
                 LDA         6               ; hardcoded start of graphic ram $600
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 LDA         GRPRAM          ; GET THE START OF GRAPHIC RAM
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -3135,7 +3135,7 @@ PCLEAR          JSR         EVALEXPB        ; EVALUATE EXPRESSION, RETURN VALUE
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                IFLT        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 ; THIS CODE REFLECTS THE INFAMOUS PCLEAR BUG
                 LBLO        LB44A           ; IF TRYING TO CLEAR LESS THAN END OF CURRENT PAGE = 'ILLEGAL FUNCTION CALL'
@@ -3146,7 +3146,7 @@ PCLEAR          JSR         EVALEXPB        ; EVALUATE EXPRESSION, RETURN VALUE
                 SUBD        FRETOP          ; SUBTRACT OUT TOP OF CLEARED SPACE
                 BCC         L966D           ; NO ROOM LEFT - 'ILLEGAL FUNCTION CALL'
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; THIS CODE REFLECTS THE INFAMOUS PCLEAR BUG
                 BLO         L966D           ; FC ERROR IF TRYING TO CLEAR < END OF GRAPHIC RAM
@@ -3159,7 +3159,7 @@ PCLEAR          JSR         EVALEXPB        ; EVALUATE EXPRESSION, RETURN VALUE
                 JSR         >L80D0          ; ADJUST BASICS INPUT POINTER
                 NOP                         ;  SPACE FILLER FOR EXBAS 1.1
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
diff --git a/supbas.asm b/supbas.asm
index 134cf22..5525edb 100644
--- a/supbas.asm
+++ b/supbas.asm
@@ -339,30 +339,30 @@ WAITLOOP        BRA         WAITLOOP        ; ENDLESS WAIT LOOP
 
 ; IMAGES OF THE VIDEO CONTROL REGISTERS (FF98-FF9F)
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
 VIDIMAGE        FCB         $00,$00,$00,$00,$0F,$E0,$00,$00
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 VIDIMAGE        FCB         $08,$00,$00,$00,$0F,$E0,$00,$00
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
 
 ; IMAGES OF THE PALETTE REGISTERS (FFB0-FFBF)
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
 PALIMAGE        FCB         $12,$24,$0B,$07,$3F,$1F,$09,$26 ; pal regs #0-7
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 PALIMAGE        FCB         $12,$36,$09,$24,$3F,$1B,$2D,$26 ; pal regs #0-7
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
                 FCB         $00,$12,$00,$3F,$00,$12,$00,$26 ; pal regs #8-15
 
@@ -552,7 +552,7 @@ ENDMOVE         =           *               ; THE END OF THE DATA THAT'S COPIED
 
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
 ; UNUSED GARBAGE BYTES?
                 FCB         $FF,$FF,$FF,$FF
@@ -566,7 +566,7 @@ ENDMOVE         =           *               ; THE END OF THE DATA THAT'S COPIED
                 FCB         $00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                 FCB         $00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; UNUSED GARBAGE BYTES?
                 FCB         $5E,$60,$C6,$F0
@@ -580,7 +580,7 @@ ENDMOVE         =           *               ; THE END OF THE DATA THAT'S COPIED
                 FCB         $00,$00,$00,$00,$00,$00,$00,$00,$05,$A8,$08,$74,$2B,$72,$8A,$62
                 FCB         $00,$00,$00,$00,$00,$00,$00,$00,$0B,$70,$02,$79,$22,$E0,$0A,$D0
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 FCB         $00,$18,$00,$0E,$00
@@ -974,7 +974,7 @@ AUTHPIC         FCB         $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,
 ENDPIC          =           *               ; THE END OF THE AUTHOR'S PICTURE DATA
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
 ; UNUSED GARBAGE BYTES?
                 FCB         $FF,$00,$00,$A0,$27,$00,$00,$00,$00,$00,$00
@@ -1042,7 +1042,7 @@ ENDPIC          =           *               ; THE END OF THE AUTHOR'S PICTURE DA
                 FCB         $00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                 FCB         $00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; UNUSED GARBAGE BYTES?
                 FCB         $FF,$00,$00,$A0,$27,$0D,$71,$01,$00,$02,$00
@@ -1110,7 +1110,7 @@ ENDPIC          =           *               ; THE END OF THE AUTHOR'S PICTURE DA
                 FCB         $00,$18,$40,$00,$00,$00,$01,$10,$95,$1E,$05,$90,$8F,$15,$A5,$F4
                 FCB         $90,$1E,$01,$00,$00,$00,$00,$40,$6F,$E1,$BE,$FF,$FF,$FB,$DE,$F7
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 
@@ -1150,15 +1150,15 @@ SETTEXT         PSHS        Y,X,A
 IM.TEXT         FCB         COCO+MMUEN+MC3+MC2 ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $00
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FCB         $08             ; $00 | $08
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 FCB         $00,$00,$00,$0F,$E0 ; FF98
@@ -1167,15 +1167,15 @@ IM.TEXT         FCB         COCO+MMUEN+MC3+MC2 ; FF90
 SE03B           FCB         MMUEN+MC3+MC2   ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $03
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FCB         $0B             ; $03 | $08
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 FCB         $05,$12,$00,$00,$D8 ; FF98
@@ -1184,15 +1184,15 @@ SE03B           FCB         MMUEN+MC3+MC2   ; FF90
 SE044           FCB         MMUEN+MC3+MC2   ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $03
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FCB         $0B             ; $03 | $08
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 FCB         $15,$12,$00,$00,$D8 ; FF98
@@ -1219,15 +1219,15 @@ RESTABLE        FCB         $15             ; 320 PIXELS, 4 COLORS
 IM.GRAPH        FCB         MMUEN+MC3+MC2   ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $80
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FCB         $88             ; $80 | $08
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 FCB         $00,$00,$00,$00,$C0 ; FF98
@@ -1236,15 +1236,15 @@ IM.GRAPH        FCB         MMUEN+MC3+MC2   ; FF90
 SE079           FCB         MMUEN+MC3+MC2   ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $80
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FCB         $88             ; $80 | $08
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 FCB         $00,$00,$00,$00,$C0 ; FF98
@@ -1818,15 +1818,15 @@ SE600           CMPA        #$F6            ; 'CMP' TOKEN?
 ; CMP ENTRY POINT - SET THE PALETTE REGISTERS FOR DEFAULT CMP VALUES
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
 SE606           LEAX        >IM.CMP,PCR     ; POINT TO THE DEFAULT CMP PALETTE COLORS
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 SE606           LEAX        >IM.RGB,PCR     ; POINT TO THE DEFAULT CMP PALETTE COLORS
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 BRA         SE634           ; PUT THE DATA POINTED TO BY X INTO THE PALETTE REGISTERS
@@ -1876,17 +1876,17 @@ CMP             BRA         SE606
 
 ; MASTER IMAGES USED TO PROGRAM THE CUSTOM CHIP'S PALETTE REGISTERS
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
 IM.PALET        FCB         18,36,11,7,63,31,9,38
                 FCB         0,18,0,63,0,18,0,38
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 IM.PALET        FCB         $12,$36,$09,$24,$3f,$1b,$2d,$26
                 FCB         $00,$12,$00,$3f,$00,$12,$00,$26
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 ; HSCREEN
@@ -4170,17 +4170,17 @@ SFA06           PULS        B               ; GET THE NEW ATTRIBUTE BYTE FROM TH
                 RTS
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
 ; UNUSED GARBAGE BYTES?
                 FCB         $00,$00,$00,$00
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
 ; UNUSED GARBAGE BYTES?
                 FCB         $A1,$2A,$C4,$0B
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
 ; UNUSED GARBAGE BYTES?
@@ -4280,7 +4280,7 @@ INT.SWI         EQU         $FEFA
 INT.NMI         EQU         $FEFD
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                IFLT        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                 FCB         $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$00,$00,$00,$00,$00,$00,$00,$00
@@ -4316,7 +4316,7 @@ INT.NMI         EQU         $FEFD
                 FCB         $00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                 FDB         $0000
 ; -----------------------------------------------------------------------------
-                else
+                ELSE
 ; -----------------------------------------------------------------------------
                 FCB         $20,$0B,$80,$00,$08,$2E,$40,$04,$F9,$7F,$F7,$DF,$FC,$FF,$FD,$7F
                 FCB         $F1,$7F,$E5,$0F,$F3,$3F,$EB,$BF,$90,$0E,$30,$05,$10,$0E,$70,$05
@@ -4352,7 +4352,7 @@ INT.NMI         EQU         $FEFD
                 FCB         $90,$08,$C0,$09,$C0,$05,$F2,$05,$F5,$0F,$F5,$0F,$F7,$AF,$F3,$8F
                 FDB         $800B
 ; -----------------------------------------------------------------------------
-                endif
+                ENDC
 ; -----------------------------------------------------------------------------
 
                 FDB         INT.SWI3
-- 
